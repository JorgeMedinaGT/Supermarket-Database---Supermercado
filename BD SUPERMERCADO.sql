CREATE DATABASE PROYECTO_SUPERMERCADO2025

USE PROYECTO_SUPERMERCADO2025


-- TABLA RECURSOS HUMANOS
CREATE TABLE RECURSOS_HUMANOS (
    ID_DPTO_RH INT NOT NULL,               
    CONSTRAINT PK_RECURSOS_HUMANOS PRIMARY KEY (ID_DPTO_RH)
);


-- TABLA PUESTO
CREATE TABLE PUESTO (
    ID_PUESTO INT NOT NULL,
    TITULO_PUESTO NVARCHAR(100) NOT NULL,
    SALARIO_BASE DECIMAL(10,2),
    DESCRIPCION NVARCHAR(MAX),
    ID_DPTO_RH INT NOT NULL,
    CONSTRAINT PK_PUESTO PRIMARY KEY (ID_PUESTO),
    CONSTRAINT FK_PUESTO_RECURSOS_HUMANOS FOREIGN KEY (ID_DPTO_RH) REFERENCES RECURSOS_HUMANOS(ID_DPTO_RH)
);

-- TABLA EMPLEADO
CREATE TABLE EMPLEADO (
    ID_EMPLEADO INT NOT NULL,
    ID_PUESTO INT NOT NULL,
    NOMBRE NVARCHAR(100) NOT NULL,
    BONOS DECIMAL(10,2),
    EMAIL NVARCHAR(255),
    TELEFONO NVARCHAR(50),
    NACIONALIDAD NVARCHAR(50),
    FECHA_CONTRATACION DATE NOT NULL,
    CONSTRAINT PK_EMPLEADO PRIMARY KEY (ID_EMPLEADO),
    CONSTRAINT FK_EMPLEADO_PUESTO FOREIGN KEY (ID_PUESTO) REFERENCES PUESTO(ID_PUESTO)
);

-- TABLA ORDEN_ATENCION_CLIENTE
CREATE TABLE ORDEN_ATENCION_CLIENTE (
    ID_ORDEN_AC INT NOT NULL,
    ID_EMPLEADO INT NOT NULL,
    ID_CLIENTE INT NOT NULL, 
    FECHA_HORA DATETIME NOT NULL,
    DETALLE NVARCHAR(MAX),
    CONSTRAINT PK_ORDEN_ATENCION_CLIENTE PRIMARY KEY (ID_ORDEN_AC),
    CONSTRAINT FK_ORDEN_EMPLEADO FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO(ID_EMPLEADO),
    CONSTRAINT FK_ORDEN_CLIENTE FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE) -- PLACEHOLDER
);

-- TABLA SATISFACCION_POR_ORDEN
CREATE TABLE SATISFACCION_POR_ORDEN (
    ID_ORDEN_AC INT NOT NULL,
    ALTA BIT NOT NULL,
    BAJA BIT NOT NULL,
    MEDIA BIT NOT NULL,
    SIN_RESPUESTA BIT NOT NULL,
    CONSTRAINT PK_SATISFACCION PRIMARY KEY (ID_ORDEN_AC), 
    CONSTRAINT FK_SATISFACCION_ORDEN FOREIGN KEY (ID_ORDEN_AC) REFERENCES ORDEN_ATENCION_CLIENTE(ID_ORDEN_AC)
); -- Ojo: la llave foránea también es primaria, relación 1 a 1

-- TABLA CLIENTE
CREATE TABLE CLIENTE (
    ID_CLIENTE INT NOT NULL,
    NIT NVARCHAR(50) NOT NULL,
    NOMBRE NVARCHAR(100) NOT NULL,
    APELLIDO NVARCHAR(100),
    DIRECCION NVARCHAR(255),
    TELEFONO NVARCHAR(20),
    EMAIL NVARCHAR(100),
    CONSTRAINT PK_CLIENTE PRIMARY KEY (ID_CLIENTE)
);

-- TABLA TIPO_CLIENTE
CREATE TABLE TIPO_CLIENTE (
    ID_TIPO_CLIENTE INT NOT NULL,
    ID_CLIENTE INT NOT NULL, 
    OCASIONAL BIT NOT NULL,
    HABITUAL BIT NOT NULL,
    CLIENTE_IMPORTANTE BIT NOT NULL,
    CONSTRAINT PK_TIPO_CLIENTE PRIMARY KEY (ID_TIPO_CLIENTE),
    CONSTRAINT FK_TIPO_CLIENTE_CLIENTE FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE)
);

-- TABLA FACTURA_VENTA
CREATE TABLE FACTURA_VENTA (
    ID_FACTURA_VENTA INT NOT NULL, 
    ID_CLIENTE INT NOT NULL,       
    FECHA_EMISION DATE NOT NULL,  
    TOTAL DECIMAL(10,2) NOT NULL,  
    CONSTRAINT PK_FACTURA_VENTA PRIMARY KEY (ID_FACTURA_VENTA),
    CONSTRAINT FK_FACTURA_CLIENTE FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE)
);

-- TABLA DETALLE_FACTURA_VENTA (ASOCIATIVA ENTRE FACTURA_VENTA Y PRODUCTO)
CREATE TABLE DETALLE_FACTURA_VENTA (
    ID_FACTURA_VENTA INT NOT NULL,    
    ID_PRODUCTO INT NOT NULL,         
    CANTIDAD INT NOT NULL,            
    PRECIO_UNITARIO DECIMAL(10,2) NOT NULL, 
    SUBTOTAL DECIMAL(10,2) NOT NULL,  
    CONSTRAINT PK_DETALLE_FACTURA PRIMARY KEY (ID_FACTURA_VENTA, ID_PRODUCTO), --OJO: LLAVE COMPUESTA: sin esta, no habrá una regla que impida insertar dos filas iguales (idéntico ID_FACTURA_VENTA y ID_PRODUCTO). Esto podría ocasionar problemas de integridad en la base de datos, como cálculos incorrectos de totales o incoherencias en los registros. Sirve para para garantizar que cada combinación de factura y producto fuera única. Este enfoque funciona bien para tablas asociativas en relaciones de m a m.
    CONSTRAINT FK_DETALLE_FACTURA FOREIGN KEY (ID_FACTURA_VENTA) REFERENCES FACTURA_VENTA(ID_FACTURA_VENTA),
    CONSTRAINT FK_DETALLE_PRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO)
);

-- NOTA: La alternativa (efectiva y válida según el caso) a la llave compuesta es una llave primaria para la entidad asociativa (da escalabilidad y facilidad), pero la llave compuesta es  eficiente si se busca lo siguiente: 
	--Unicidad entre dos entidades:Si deseas garantizar que una combinación específica (por ejemplo, una factura con un producto) no se repita, una llave primaria compuesta es ideal.
    --Optimización para relaciones directas: Cuando las claves foráneas también actúan como atributos primarios (identidad del registro), usar una clave compuesta simplifica ciertas validaciones, como evitar duplicados.

-- TABLA CATEGORIA
CREATE TABLE CATEGORIA (
    ID_CATEGORIA INT NOT NULL,          
    NOMBRE NVARCHAR(100) NOT NULL,     
    DESCRIPCION NVARCHAR(MAX),         
    CONSTRAINT PK_CATEGORIA PRIMARY KEY (ID_CATEGORIA)
);

-- TABLA PRODUCTO
CREATE TABLE PRODUCTO (
    ID_PRODUCTO INT NOT NULL,               
    NOMBRE NVARCHAR(100) NOT NULL,         
    PRECIO DECIMAL(10,2) NOT NULL,          
    ID_CATEGORIA INT NOT NULL,             
    CONSTRAINT PK_PRODUCTO PRIMARY KEY (ID_PRODUCTO),
    CONSTRAINT FK_PRODUCTO_CATEGORIA FOREIGN KEY (ID_CATEGORIA) REFERENCES CATEGORIA(ID_CATEGORIA)
);

-- TABLA BODEGA
CREATE TABLE BODEGA (
    ID_BODEGA INT NOT NULL,                
    NOMBRE NVARCHAR(100) NOT NULL,         
    UBICACION NVARCHAR(255),              
    CONSTRAINT PK_BODEGA PRIMARY KEY (ID_BODEGA)
);

-- TABLA INVENTARIO
CREATE TABLE INVENTARIO (
    ID_PRODUCTO INT NOT NULL,              
    ID_BODEGA INT NOT NULL,                 
    EXISTENCIA INT NOT NULL,               
    CONSTRAINT PK_INVENTARIO PRIMARY KEY (ID_PRODUCTO, ID_BODEGA),
    CONSTRAINT FK_INVENTARIO_PRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO),
    CONSTRAINT FK_INVENTARIO_BODEGA FOREIGN KEY (ID_BODEGA) REFERENCES BODEGA(ID_BODEGA)
);

-- TABLA CAMPAÑA
CREATE TABLE CAMPAÑA (
    ID_CAMPANA INT NOT NULL,              
    NOMBRE_CAMPANA NVARCHAR(100) NOT NULL,  
    FECHA_INICIO DATE NOT NULL,            
    FECHA_FINAL DATE NOT NULL,             
    PRESUPUESTO DECIMAL(10,2) NOT NULL,   
    MEDIO_PROMOCION NVARCHAR(100),        
    CONSTRAINT PK_CAMPAÑA PRIMARY KEY (ID_CAMPANA)
);

--Nota: Por convenciones globales, muchos desarrolladores prefieren evitar caracteres especiales en nombres de tablas, columnas o restricciones, para prevenir conflictos en integraciones futuras o migraciones entre sistemas.

-- TABLA PROMOCION
CREATE TABLE PROMOCION (
    ID_PROMOCION INT NOT NULL,           
    DESCUENTO DECIMAL(5,2) NOT NULL,       
    POLITICAS NVARCHAR(MAX),              
    ID_PRODUCTO INT NOT NULL,             
    ID_CAMPANA INT NOT NULL,             
    CONSTRAINT PK_PROMOCION PRIMARY KEY (ID_PROMOCION),
    CONSTRAINT FK_PROMOCION_PRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO),
    CONSTRAINT FK_PROMOCION_CAMPAÑA FOREIGN KEY (ID_CAMPANA) REFERENCES CAMPAÑA(ID_CAMPANA)
);


-- TABLA PROVEEDOR
CREATE TABLE PROVEEDOR (
    ID_PROVEEDOR INT NOT NULL,              
    NOMBRE NVARCHAR(100) NOT NULL,         
    TELEFONO NVARCHAR(50),                 
    CORREO NVARCHAR(100),                  
    DIRECCION NVARCHAR(255),               
    NIT NVARCHAR(50),                     
    CONSTRAINT PK_PROVEEDOR PRIMARY KEY (ID_PROVEEDOR)
);

-- TABLA FACTURA_COMPRA
CREATE TABLE FACTURA_COMPRA (
    ID_FACTURA_COMPRA INT NOT NULL,        
    ID_PROVEEDOR INT NOT NULL,              
    FECHA_CREACION DATE NOT NULL,          
    FECHA_ENTREGA DATE,                     
    TOTAL DECIMAL(10,2) NOT NULL,          
    CONSTRAINT PK_FACTURA_COMPRA PRIMARY KEY (ID_FACTURA_COMPRA),
    CONSTRAINT FK_FACTURA_PROVEEDOR FOREIGN KEY (ID_PROVEEDOR) REFERENCES PROVEEDOR(ID_PROVEEDOR)
);

-- TABLA DETALLE_FACTURA_COMPRA
CREATE TABLE DETALLE_FACTURA_COMPRA (
    ID_FACTURA_COMPRA INT NOT NULL,        
    ID_PRODUCTO INT NOT NULL,               
    CANTIDAD INT NOT NULL,                 
    PRECIO_UNITARIO DECIMAL(10,2) NOT NULL, 
    SUBTOTAL DECIMAL(10,2) NOT NULL,       
    CONSTRAINT PK_DETALLE_FACTURA_COMPRA PRIMARY KEY (ID_FACTURA_COMPRA, ID_PRODUCTO),
    CONSTRAINT FK_DETALLE_FACTURA_COMPRA FOREIGN KEY (ID_FACTURA_COMPRA) REFERENCES FACTURA_COMPRA(ID_FACTURA_COMPRA),
    CONSTRAINT FK_DETALLE_PRODUCTO_COMPRA FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO)
);





